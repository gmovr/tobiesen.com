---
type NavbarLink = {
	title: string;
	href: string;
};

const navbarLinks: Array<NavbarLink> = [
	{
		title: 'Now',
		href: '/now',
	},
	{
		title: 'Archive',
		href: '/blog',
	},
	{
		title: 'Contact',
		href: '/contact',
	},
];

// Get current path for active state
const currentPath = Astro.url.pathname;
---

<nav
	class="mx-auto mb-12 flex max-w-screen-lg items-center justify-between pt-2 text-black dark:text-white"
>
	<a
		href="/"
		id="logo"
		class="relative z-50 bg-gradient-to-r from-pink-500 to-rose-500 bg-clip-text font-mono text-3xl tracking-tighter text-transparent transition-all duration-500 hover:bg-gradient-to-l data-[menu-open=true]:text-white dark:data-[menu-open=true]:text-white"
		>~/tobiesen</a
	>

	<!-- Desktop Menu -->
	<div class="hidden md:block">
		<ul class="flex gap-4">
			{
				navbarLinks.map((link) => (
					<li>
						<a 
							href={link.href} 
							class="group relative inline-block no-underline overflow-hidden py-1"
							aria-current={currentPath === link.href ? 'page' : undefined}
						>
							<span class="relative">
								{link.title}
								<span class:list={[
									"absolute inset-x-0 bottom-0 h-0.5 bg-gradient-to-r from-pink-500 to-rose-500",
									"transition-transform duration-300 ease-out origin-left",
									currentPath === link.href ? "scale-x-100" : "scale-x-0 group-hover:scale-x-100"
								]} />
							</span>
						</a>
					</li>
				))
			}
		</ul>
	</div>

	<!-- Mobile Menu Button -->
	<button
		id="menu-toggle"
		class="relative z-50 h-8 w-8 md:hidden"
		aria-label="Toggle Menu"
	>
		<div class="group flex h-full w-full flex-col items-center justify-center gap-1.5">
			<span class="h-0.5 w-6 rounded-full bg-gradient-to-r from-pink-500 to-rose-500 transition-all duration-300 ease-out group-data-[open=true]:bg-none group-data-[open=true]:bg-white group-data-[open=true]:translate-y-2 group-data-[open=true]:rotate-45" />
			<span class="h-0.5 w-6 rounded-full bg-gradient-to-r from-pink-500 to-rose-500 transition-all duration-300 ease-out group-data-[open=true]:bg-none group-data-[open=true]:bg-white group-data-[open=true]:opacity-0" />
			<span class="h-0.5 w-6 rounded-full bg-gradient-to-r from-pink-500 to-rose-500 transition-all duration-300 ease-out group-data-[open=true]:bg-none group-data-[open=true]:bg-white group-data-[open=true]:-translate-y-2 group-data-[open=true]:-rotate-45" />
		</div>
	</button>

	<!-- Mobile Menu Overlay -->
	<div
		id="mobile-menu"
		class="fixed inset-0 z-40 translate-x-full bg-gradient-to-br from-pink-500/95 to-rose-500/95 transition-transform duration-300 ease-out data-[open=true]:translate-x-0 md:hidden"
	>
		<div class="flex h-full items-center justify-center">
			<ul class="flex flex-col items-center gap-8 text-2xl">
				{
					navbarLinks.map((link) => (
						<li>
							<a 
								href={link.href}
								class="group relative inline-block text-white no-underline overflow-hidden py-1"
							>
								<span class="relative">
									{link.title}
									<span class="absolute inset-x-0 bottom-0 h-0.5 bg-white scale-x-0 transition-transform duration-300 ease-out origin-left group-hover:scale-x-100" />
								</span>
							</a>
						</li>
					))
				}
			</ul>
		</div>
	</div>
</nav>

<script>
	function setupMenu() {
		const menuToggle = document.getElementById('menu-toggle');
		const mobileMenu = document.getElementById('mobile-menu');
		const toggleButton = menuToggle?.querySelector('div');
		const logo = document.getElementById('logo');

		menuToggle?.addEventListener('click', () => {
			const isOpen = toggleButton?.getAttribute('data-open') === 'true';
			toggleButton?.setAttribute('data-open', (!isOpen).toString());
			mobileMenu?.setAttribute('data-open', (!isOpen).toString());
			logo?.setAttribute('data-menu-open', (!isOpen).toString());
			document.body.style.overflow = !isOpen ? 'hidden' : '';
		});
	}

	// Setup on initial load
	setupMenu();

	// Setup on view transitions
	document.addEventListener('astro:after-swap', setupMenu);
</script>
