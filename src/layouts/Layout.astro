---
import { ViewTransitions, fade, slide } from 'astro:transitions';
import Navbar from '../components/Navbar.astro';
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="canonical" href={Astro.url} />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
                <link rel="alternate" type="application/rss+xml" 
                                      title="RSS feed for Tobiesen.com" 
                                      href="/feed.xml" />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body class="bg-white pb-8 text-gray-900 max-sm:px-2 dark:bg-slate-800">
		<div class="container mx-auto px-4">
			<Navbar />
			<main>
				<div transition:animate={slide({ duration: 200, y: 10 })} transition:animate={fade({ duration: 200 })}>
					<slot />
				</div>
			</main>
		</div>
		<script is:inline>
			const theme = (() => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
					return 'dark';
				}
				return 'light';
			})();
			document.addEventListener('astro:after-swap', function () {
				if (localStorage.getItem('theme') === 'dark') {
					document.documentElement.setAttribute('data-mode', 'dark');
				}
			});

			if (theme === 'light') {
				document.documentElement.removeAttribute('data-mode');
			} else {
				document.documentElement.setAttribute('data-mode', 'dark');
			}
			window.localStorage.setItem('theme', theme);
		</script>
	</body>
</html>
